# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, The Ares Contributors
# This file is distributed under the same license as the Ares package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ares 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-05 15:46+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../new/reverseengineerlogic.rst:6
msgid "Reverse Engineer logic"
msgstr ""

#: ../new/reverseengineerlogic.rst:8
msgid ""
"In :game:`Red Alert 2`, the Cloning Vats reverse-engineered any infantry "
"it was sent into. :game:`Ares` not just re-enables this logic but also "
"enables customization."
msgstr ""

#: ../new/reverseengineerlogic.rst:13
msgid ":tagdef:`[BuildingType]ReverseEngineersVictims=boolean`"
msgstr ""

#: ../new/reverseengineerlogic.rst:13
msgid "Enables the reverse-engineering logic. Defaults to :value:`no`."
msgstr ""

#: ../new/reverseengineerlogic.rst:15
msgid ""
"Currently :tag:`Grinding=yes` is needed to the reverse-engineering "
"building to have this logic working. Also, reverse-engineered units will "
"ignore :tag:`Prerequisite`, :tag:`Prerequisite.Lists`, \\ "
":tag:`PrerequisiteOverride`, :tag:`StolenTech`, both old and new models, "
"\\ :tag:`TechLevel`, :tag:`RequiredHouses` and :tag:`ForbiddenHouses`, "
"but obeying :tag:`BuildLimit`, :tag:`Prerequisite.RequiredTheaters`, \\ "
":tag:`Prerequisite.Negative`, :tag:`Factory` and :tag:`Naval` settings."
msgstr ""

#: ../new/reverseengineerlogic.rst:23
msgid ""
"While this logic appears to be working, there have also been some minor "
"bugs related to this feature. Be advised."
msgstr ""

#: ../new/reverseengineerlogic.rst:26
msgid ":tagdef:`[InfantryOrVehicle]CanBeReversed=boolean`"
msgstr ""

#: ../new/reverseengineerlogic.rst:27
msgid "Allows the unit to be reverse-engineered. Defaults to :value:`yes`."
msgstr ""

#: ../new/reverseengineerlogic.rst:31
msgid ":tagdef:`[InfantryOrVehicle]ReversedAs=TechnoType`"
msgstr ""

#: ../new/reverseengineerlogic.rst:29
msgid ""
"The optional type to override what a unit is reversed as. If not set, "
"uses the actual unit type. Supports :type:`BuildingType`\\ s. Use "
":value:`none` to reset. Defaults to :value:`none`."
msgstr ""

#: ../new/reverseengineerlogic.rst:33
msgid ""
"For a spy effect to reset a player's build options gained by reverse "
"engineering, see :ref:`Spy Behavior <spybehavior-unreverse>`."
msgstr ""

#: ../new/reverseengineerlogic.rst:37
msgid ""
"When you are the owner of the reversing facility, reverse-engineering any"
" :type:`InfantryType` for the first time will play "
":value:`EVA_ReverseEngineeredInfantry` and "
":value:`EVA_NewTechnologyAcquired`; reverse-engineering any "
":type:`VehicleType` for the first time will play "
":value:`EVA_ReverseEngineeredVehicle` and "
":value:`EVA_NewTechnologyAcquired`. The undo-reversing spy effect will "
"play :value:`EVA_TechnologyStolen`."
msgstr ""

