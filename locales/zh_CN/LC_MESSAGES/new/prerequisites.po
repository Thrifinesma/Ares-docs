# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, The Ares Contributors
# This file is distributed under the same license as the Ares package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ares 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-05 15:46+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../new/prerequisites.rst:4
msgid "Prerequisites"
msgstr ""

#: ../new/prerequisites.rst:6
msgid ""
"The prerequisite system has been enhanced in several ways. New flags are "
"described below, and an issue has been resolved with regard to upgrades "
"as prerequisites (see "
":doc:`/bugfixes/type2/buildingtypeupgradesarenotviableprerequisites`)."
msgstr ""

#: ../new/prerequisites.rst:14
msgid "Require Theater"
msgstr ""

#: ../new/prerequisites.rst:32
msgid ":tagdef:`[TechnoType]Prerequisite.RequiredTheaters=list of theater names`"
msgstr ""

#: ../new/prerequisites.rst:17
msgid ""
"The map theaters in which the type is available. Defaults to all "
"theaters. For example, if only the :value:`SNOW` theater were specified "
"then the type would only be available on arctic maps. This allows you to "
"implement, for example, the :tag:`AlternateArcticArt` functionality used "
"on the Navy SEAL, but for all types and all theaters (however this may "
"present challenges for your AI). The theater names are:"
msgstr ""

#: ../new/prerequisites.rst:24
msgid ":value:`TEMPERATE` - most maps"
msgstr ""

#: ../new/prerequisites.rst:25
msgid ":value:`SNOW` - arctic/snowy maps"
msgstr ""

#: ../new/prerequisites.rst:26
msgid ":value:`URBAN` - some city maps"
msgstr ""

#: ../new/prerequisites.rst:27
msgid ":value:`DESERT` - some desert maps, older maps use Temperate"
msgstr ""

#: ../new/prerequisites.rst:28
msgid ":value:`LUNAR` - Soviet Mission 6"
msgstr ""

#: ../new/prerequisites.rst:29
msgid ":value:`NEWURBAN` - most YR urban maps"
msgstr ""

#: ../new/prerequisites.rst:31
msgid ""
"\\ :tag:`PrerequisiteOverride` does *not* override \\ "
":tag:`Prerequisite.RequiredTheaters`."
msgstr ""

#: ../new/prerequisites.rst:40
msgid "Negative Prerequisites"
msgstr ""

#: ../new/prerequisites.rst:48
msgid ":tagdef:`[TechnoType]Prerequisite.Negative=list of BuildingTypes`"
msgstr ""

#: ../new/prerequisites.rst:43
msgid ""
"The buildings that preclude construction of the type. If the player owns "
"one or more of the buildings on this list then the type will not be "
"available. Defaults to :value:`none`."
msgstr ""

#: ../new/prerequisites.rst:47
msgid ""
"\\ :tag:`PrerequisiteOverride` does *not* override \\ "
":tag:`Prerequisite.Negative`."
msgstr ""

#: ../new/prerequisites.rst:56
msgid "Multiple Alternative Prerequisites Lists"
msgstr ""

#: ../new/prerequisites.rst:58
msgid ""
":game:`Ares` supports more than one prerequisite list. Each prerequisite "
"list acts as an independent copy of the existing :tag:`Prerequisite` "
"flag, and a minimum of one of the prerequisite lists must be satisfied "
"for this type to become buildable."
msgstr ""

#: ../new/prerequisites.rst:63
msgid ""
"For example, if you set :tag:`Prerequisite=GAPILE,GATECH` and "
":tag:`Prerequisite.List1=NAHAND,NATECH` then the object will be available"
" to any player who owns both an Allied Barracks and Battle Lab, or a "
"Soviet Barracks and Battle Lab."
msgstr ""

#: ../new/prerequisites.rst:68
msgid ""
"Either :tag:`Prerequisite` or :tag:`Prerequisite.List0` has to be "
"specified, because these are only *additional* lists and the original "
"prerequisites list is still used. If this is ignored and the list is left"
" empty, the object will become always buildable, because an empty list is"
" always satisfied."
msgstr ""

#: ../new/prerequisites.rst:76
msgid ":tagdef:`[TechnoType]Prerequisite.Lists=integer`"
msgstr ""

#: ../new/prerequisites.rst:75
msgid ""
"Specifies how many extra Prerequisite lists complimentary to the one "
"default list are available. Defaults to :value:`0`."
msgstr ""

#: ../new/prerequisites.rst:84
msgid ""
":tagdef:`[TechnoType]Prerequisite.List#=list of BuildingTypes (where # is"
" the 1-based index of the prerequisite list, the maximum specified by "
"Prerequisite.Lists)`"
msgstr ""

#: ../new/prerequisites.rst:79
msgid ""
"The :type:`BuildingTypes` required to satisfy this prerequisite list. "
"Each list is checked on its own, and if any list is satisfied, the "
"Prerequisite requirement is satisfied."
msgstr ""

#: ../new/prerequisites.rst:83
msgid ""
"\\ :tag:`Prerequisite.List0`, if specified, overrides the existing \\ "
":tag:`Prerequisite` flag."
msgstr ""

#: ../new/prerequisites.rst:92
msgid "Require Stolen Technology"
msgstr ""

#: ../new/prerequisites.rst:97
msgid ":tagdef:`[TechnoType]Prerequisite.StolenTechs=list of integers`"
msgstr ""

#: ../new/prerequisites.rst:95
msgid ""
"The list of stealable technology types that must be stolen before this "
"object can be built. See :ref:`Stolen Technology <spybehavior-"
"stolentech>` for more information."
msgstr ""

#: ../new/prerequisites.rst:105
msgid "Require Factory Built By Country"
msgstr ""

#: ../new/prerequisites.rst:107
msgid ""
"Satisfying prerequisites can be tied to the initial owner of a factory "
"building. The initial owner is the player who owned it first: the player "
"who built it, or the owner of buildings pre-placed on the map. For "
"neutral structures, this would be the neutral country."
msgstr ""

#: ../new/prerequisites.rst:115
msgid ":tagdef:`[BuildingType]FactoryOwners.HasAllPlans=boolean`"
msgstr ""

#: ../new/prerequisites.rst:113
msgid ""
"Whether this building provides plans for all factory types of the initial"
" owner. If :value:`yes`, this building satisfies FactoryOwner "
"requirements of all object types. If the building is lost, the plans are "
"lost. Defaults to :value:`no`."
msgstr ""

#: ../new/prerequisites.rst:118
msgid ":tagdef:`[BuildingType]FactoryOwners.Permanent=boolean`"
msgstr ""

#: ../new/prerequisites.rst:118
msgid ""
"Whether a player capturing a building of this type would permanently gain"
" all plans of its initial owner. Supported on upgrades. Defaults to "
":value:`no`."
msgstr ""

#: ../new/prerequisites.rst:123
msgid ":tagdef:`[TechnoType]FactoryOwners=list of houses`"
msgstr ""

#: ../new/prerequisites.rst:121
msgid ""
"The list of countries whose factories can build this object. If empty, "
"every country is allowed to build this object. Otherwise, players need to"
" own at least one factory built by a country in this list or the plans of"
" at least one of these countries to produce it."
msgstr ""

#: ../new/prerequisites.rst:128
msgid ":tagdef:`[TechnoType]FactoryOwners.Forbidden=list of houses`"
msgstr ""

#: ../new/prerequisites.rst:126
msgid ""
"The list of countries whose factories cannot build this object. Players "
"owning only factories built by countries in this list and only having "
"plans of these countries are prevented from producing it."
msgstr ""

#: ../new/prerequisites.rst:130
msgid ""
"AI ignores :tag:`FactoryOwners` and :tag:`FactoryOwners.Forbidden` on "
"buildings, but not on units."
msgstr ""

#: ../new/prerequisites.rst:138
msgid "Overview"
msgstr ""

#: ../new/prerequisites.rst:140
msgid ""
"Below is a flowchart of the current prerequisite system. Blue sections "
"are unchanged from the original system. Pink sections have been modified "
"or added by :game:`Ares`."
msgstr ""

#: ../new/prerequisites.rst:152
msgid "Generic Prerequisite Groups"
msgstr ""

#: ../new/prerequisites.rst:154
msgid ""
"You can now create custom generic prerequisite groups like the existing "
":value:`POWER` (:tag:`PrerequisitePower`), :value:`FACTORY` "
"(:tag:`PrerequisiteFactory`), :value:`BARRACKS` "
"(:tag:`PrerequisiteBarracks`), :value:`RADAR` (:tag:`PrerequisiteRadar`),"
" :value:`TECH` (:tag:`PrerequisiteTech`) and :value:`PROC` "
"(:tag:`PrerequisiteProc` and :tag:`PrerequisiteProcAlternate`) groups."
msgstr ""

#: ../new/prerequisites.rst:161
msgid ""
"To create new groups simply include the new :tag:`[GenericPrerequisites]`"
" section and add flags with the format :tag:`GROUPNAME=` (list of "
"BuildingTypes). For example:"
msgstr ""

#: ../new/prerequisites.rst:181
msgid ""
"If you declare any of the existing groups "
"(:value:`POWER`/:value:`FACTORY`/\\ "
":value:`BARRACKS`/:value:`RADAR`/:value:`TECH`/:value:`PROC`) then the "
"BuildingTypes specified in the :tag:`[GenericPrerequisites]` section will"
" be used *instead* of those specified on the original PrerequisiteGroup "
"flags (i.e. :tag:`[GenericPrerequisites]POWER=`, if specified, overrides "
":tag:`[General]PrerequisitePower=`). Take note that "
":tag:`[GenericPrerequisites]PROC=` does not override or nullify "
":tag:`[General]PrerequisiteProcAlternate=`."
msgstr ""

#: ../new/prerequisites.rst:198
msgid "Alternate Prerequisites with Non-Buildings"
msgstr ""

#: ../new/prerequisites.rst:200
msgid ""
"To support the Slave Miner as prerequisite, :game:`Yuri's Revenge` added "
"the option to satisfy the :value:`PROC` requirement by either owning the "
"deployed building or alternatively the undeployed Slave Miner vehicle. "
"This was done only for the refinery group by adding "
":tag:`[General]PrerequisiteProcAlternate=`, which accepted one "
":type:`VehicleType`."
msgstr ""

#: ../new/prerequisites.rst:206
msgid ""
":game:`Ares` adds alternate prerequisites support for all Generic "
"Prerequisite Groups and expands this feature to support multiple items of"
" arbitrary :type:`TechnoTypes`."
msgstr ""

#: ../new/prerequisites.rst:219
msgid ":tagdef:`[General]PrerequisiteXAlternate=list of TechnoTypes`"
msgstr ""

#: ../new/prerequisites.rst:211
msgid ""
"A list of types that alternatively satisfy this requirement if player "
"does not own a building from the :tag:`[General]PrerequisiteX=` list."
msgstr ""

#: ../new/prerequisites.rst:214
msgid ""
"Replace :tag:`X` with a key from :tag:`[GenericPrerequisites]`, first "
"character upper case, all others lower case. For instance, "
":value:`NAVALYARD` from above would become :value:`Navalyard`."
msgstr ""

#: ../new/prerequisites.rst:218
msgid ""
"Using :type:`BuildingTypes` is not supported and adding them here might "
"give unexpected results. For example, upgrades will not work."
msgstr ""

