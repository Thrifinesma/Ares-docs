# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, The Ares Contributors
# This file is distributed under the same license as the Ares package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ares 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-05 15:46+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../new/saboteur.rst:9
msgid "Saboteurs"
msgstr ""

#: ../new/saboteur.rst:11
msgid ""
":game:`Dune 2000` had the Saboteur, an infantry unit that could enter "
"enemy structures and destroy them immediately, sacrificing himself. This "
"has been re-created in :game:`Ares`."
msgstr ""

#: ../new/saboteur.rst:15
msgid ""
"Only buildings owned by enemy players are sabotagable. If a building can "
"be sabotaged, the player gets the cursor named :value:`Sabotage`, which "
"is a new customizable :doc:`Mouse Cursor </new/mousecursors>`."
msgstr ""

#: ../new/saboteur.rst:19
msgid "The temporary cloak feature has not been implemented."
msgstr ""

#: ../new/saboteur.rst:26
msgid ":tagdef:`[InfantryType]Saboteur=boolean`"
msgstr ""

#: ../new/saboteur.rst:22
msgid ""
"Whether this infantry can blow up a sabotagable building. The building "
"will be destroyed as if C4 was placed, and the Saboteur is consumed in "
"this process. Requires :tag:`Infiltrate=yes`. Not supported together with"
" vehicle hijacking, :tag:`CanDrive=yes`, C4 (either :tag:`C4=yes` or "
"granted through veterancy) and :tag:`Occupier=yes` logics. Defaults to "
":value:`no`."
msgstr ""

#: ../new/saboteur.rst:36
msgid ":tagdef:`[BuildingType]ImmuneToSaboteurs=boolean`"
msgstr ""

#: ../new/saboteur.rst:29
msgid ""
"Whether this building cannot be sabotaged. If :value:`yes`, saboteurs "
"cannot enter this structure. Defaults to :value:`yes` for :tag:`CanC4=no`"
" or :tag:`TechLevel=-1` :tag:`CanBeOccupied=yes` buildings, to "
":value:`no` otherwise."
msgstr ""

