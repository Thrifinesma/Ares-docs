# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, The Ares Contributors
# This file is distributed under the same license as the Ares package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ares 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-05 15:46+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../new/alternatetheaterart.rst:8
msgid ":captiontag:`AlternateTheaterArt`"
msgstr ""

#: ../new/alternatetheaterart.rst:10
msgid ""
"The Navy Seal has :tag:`AlternateArcticArt=yes` set, which causes the "
"game to use the image file :file:`seala.shp` on arctic maps, instead of "
":file:`seal.shp`. This logic works for any :type:`InfantryType`, however "
"this only works for the arctic theater and only for :tag:`InfantryTypes`."
msgstr ""

#: ../new/alternatetheaterart.rst:23
msgid ":tagdef:`[TechnoType]AlternateTheaterArt=boolean`"
msgstr ""

#: ../new/alternatetheaterart.rst:16
msgid ""
"Specifies whether or not this SHP-based unit can have alternate art "
"depending on the theater of the current map. For example, setting "
":tag:`Image=JUNK` and :tag:`AlternateTheaterArt=yes` on a unit will make "
"the unit load :file:`artmd.ini` section :tag:`[JUNKA]` on arctic, "
":tag:`[JUNKD]` on desert, and so on according to theater. If any of those"
" sections do not exist then the unit will fall back to :tag:`[JUNK]`. So "
"quite similar to :tag:`AlternateArcticArt`, just automatic and smarter. "
"Defaults to :value:`no`."
msgstr ""

#: ../new/alternatetheaterart.rst:25
msgid ""
"This only works for SHP-based units. Voxels do not use this system and "
"cannot have theater-specific art (you'd have to use \\ "
":tag:`Prerequisite.RequiredTheaters` to achieve that)."
msgstr ""

