# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, The Ares Contributors
# This file is distributed under the same license as the Ares package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ares 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-05 15:46+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../new/canpassiveaquire.rst:8
msgid ":captiontag:`CanPassiveAquire` Settings"
msgstr ""

#: ../new/canpassiveaquire.rst:10
msgid ""
"The following tags refine the way :tag:`CanPassiveAquire` works when a "
"human-controlled unit is in guard mode. It does not affect AI-controlled "
"units. Units can be made to effectively hold fire when in guard mode (and"
" optionally cloakable), yet pick their own targets when in area guard "
"mode."
msgstr ""

#: ../new/canpassiveaquire.rst:15
msgid ""
"In :game:`Tiberian Sun`, this was the default for any unit, and it made "
"Stealth Tanks (or any other self-cloaking unit) not give away their "
"position when an enemy unit came into range."
msgstr ""

#: ../new/canpassiveaquire.rst:19
msgid ""
"Both tags require :tag:`CanPassiveAquire=yes` and do not work on "
"buildings. Units count as cloakable if they have :tag:`Cloakable=yes` set"
" or were awarded cloak ability through crates or as veteran or elite "
"ability. The unit does not have to be actually cloaked; also, passive "
"mechanisms like Cloak Generators will not be considered."
msgstr ""

#: ../new/canpassiveaquire.rst:28
msgid ":tagdef:`[TechnoType]CanPassiveAquire.Guard=boolean`"
msgstr ""

#: ../new/canpassiveaquire.rst:26
msgid ""
"Whether this unit can acquire targets on their own when in guard mode. If"
" set to :value:`no`, the unit will hold fire, but can be made to acquire "
"own targets by putting it in area guard mode. Defaults to :value:`yes`."
msgstr ""

#: ../new/canpassiveaquire.rst:35
msgid ":tagdef:`[TechnoType]CanPassiveAquire.Cloak=boolean`"
msgstr ""

#: ../new/canpassiveaquire.rst:31
msgid ""
"Whether this unit can acquire targets on their own when the unit is "
"cloakable and in guard mode. If set to :value:`no`, the unit will hold "
"fire if cloakable and in guard mode, but can be made to acquire own "
"targets by putting it in area guard mode. "
":tag:`CanPassiveAquire.Guard=no` overrides this tag. Defaults to "
":value:`yes`."
msgstr ""

#: ../new/canpassiveaquire.rst:37
msgid ""
"Note that the second tag is more specific than the first as it means "
"cloakable *and* in guard mode. :tag:`CanPassiveAquire.Guard` is the tag "
"that makes units always hold their fire in guard mode, "
":tag:`CanPassiveAquire.Cloak` can be used for units that should hold fire"
" only if they gained the veteran or elite ability or picked up a cloak "
"crate."
msgstr ""

#: ../new/canpassiveaquire.rst:43
msgid ""
"If :tag:`OpportunityFire=yes`, units will select targets while on the "
"move, and start firing automatically. They will not lose the target again"
" when reaching their destination and thus not stop firing."
msgstr ""

#: ../new/canpassiveaquire.rst:47
msgid ""
"Also note the spelling of both tags. :game:`Ares` keeps the spelling "
"error of :tag:`CanPassiveAquire` to stay consistent."
msgstr ""

