# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, The Ares Contributors
# This file is distributed under the same license as the Ares package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ares 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-05 15:46+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../new/tiberium/storage.rst:9
msgid "Storage and Silos"
msgstr ""

#: ../new/tiberium/storage.rst:11
msgid ""
"In the earlier games, tiberium and ore were not converted to credits "
"directly. Instead, the resources were dumped at the refinery, and then "
"stored in silos. This feature was not used in :game:`Red Alert 2` and "
"wasn't working any more. :game:`Ares` restores the Storage feature."
msgstr ""

#: ../new/tiberium/storage.rst:16
msgid ""
"Bonus money created by ore purifiers is always stored on the bank account"
" instead of in the silos. This is because the bonus is calculated in "
"tiberium bails, which would count against storage. When the silo is "
"destroyed, this bonus money would be placed on the map, which would "
"create tiberium out of nothing."
msgstr ""

#: ../new/tiberium/storage.rst:21
msgid ""
"Storage on undeployable refineries like the Slave Miner is not supported."
" Slave Miners cannot provide storage space, because it is lost whenever "
"the building undeploys."
msgstr ""

#: ../new/tiberium/storage.rst:29
msgid "Enabling Storage"
msgstr ""

#: ../new/tiberium/storage.rst:31
msgid ""
":tag:`Storage` works as it did in :game:`Tiberian Sun`. For reasons of "
"backwards compatibility you have to use one new tag on a building where "
"tiberium is dumped:"
msgstr ""

#: ../new/tiberium/storage.rst:39
msgid ":tagdef:`[BuildingType]Refinery.UseStorage=boolean`"
msgstr ""

#: ../new/tiberium/storage.rst:36
msgid ""
"Whether the refinery building will store the Tiberium instead of "
"converting it to money directly. Tiberium that is converted directly does"
" not require storage space. Defaults to :value:`no`."
msgstr ""

#: ../new/tiberium/storage.rst:42
msgid "EVA Notice"
msgstr ""

#: ../new/tiberium/storage.rst:44
msgid ""
"In case the storage capacity is either depleted or nearly so, EVA will "
"warn the player by giving an :value:`EVA_SilosNeeded` notice."
msgstr ""

#: ../new/tiberium/storage.rst:47
msgid ""
"The game does not have this EVA message defined and has no audio files "
"for it. You have to add them before you can use them."
msgstr ""

#: ../new/tiberium/storage.rst:54
msgid "Text Message"
msgstr ""

#: ../new/tiberium/storage.rst:56
msgid "Complimentary to the EVA event it is possible to show a test message."
msgstr ""

#: ../new/tiberium/storage.rst:62
msgid ":tagdef:`[General]Message.SilosNeeded=csf label`"
msgstr ""

#: ../new/tiberium/storage.rst:59
msgid ""
"Set this to a text that shall be printed whenever the Silos Needed "
"warning occurs. You cannot unset this later. If you want to disable this "
"message in a game mode or map, you will have to a label of an empty text."
" Defaults to no message."
msgstr ""

#: ../new/tiberium/storage.rst:72
msgid ":captiontag:`PipScale=Tiberium`"
msgstr ""

#: ../new/tiberium/storage.rst:74
msgid ""
":value:`Tiberium` is again supported as a valid :tag:`PipScale` value. "
"For buildings with positive :tag:`Storage`, the pips will show the "
"currently used storage space compared to the overall space of that "
"building. Ore will show as yellow pips, gems as blue ones."
msgstr ""

#: ../new/tiberium/storage.rst:79
msgid ""
"To enable :tag:`PipScale=Tiberium` on buildings with :tag:`Refinery=yes` "
"or :tag:`ResourceDestination=yes`, you also have to enable "
":tag:`Refinery.UseStorage=yes`. This requirement was added because "
"otherwise the original game would show the tiberium scale for the "
"unmodded refineries, which have :tag:`PipScale=Tiberium` and valid "
":tag:`Storage` defined."
msgstr ""

