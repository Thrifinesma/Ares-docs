# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, The Ares Contributors
# This file is distributed under the same license as the Ares package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ares 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-05 15:46+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../new/makeinfantryowner.rst:6
msgid ":captiontag:`MakeInfantryOwner`"
msgstr ""

#: ../new/makeinfantryowner.rst:8
msgid ""
"The original :tag:`MakeInfantry` logic would always grant ownership of "
"newly-created infantry to the neutral side, unless the animation was "
"caused by an :type:`InfantryType` being killed by an :tag:`InfDeath=9` "
"warhead (in which case the killing player would get ownership of the new "
":type:`InfantryType`). :game:`Ares` lets you choose which player will "
"gain ownership, from one of several options."
msgstr ""

#: ../new/makeinfantryowner.rst:24
msgid ""
":tagdef:`[Animation]MakeInfantryOwner=enumeration "
"invoker|killer|victim|civilian|special|neutral|random`"
msgstr ""

#: ../new/makeinfantryowner.rst:16
msgid ""
"Specifies which house will own the resulting :type:`InfantryType` that "
"gets created after this animation has played. The animation's remappable "
"colors will be shown in that house's color, if not noted otherwise. "
"Defaults to :value:`invoker`."
msgstr ""

#: ../new/makeinfantryowner.rst:21
msgid ""
"If you are creating a chain of animations using the :tag:`Next=` tag then"
" :tag:`MakeInfantry=` goes on the last animation whereas \\ "
":tag:`MakeInfantryOwner=` goes on the first animation - that is, the "
"animation that was initially invoked."
msgstr ""

#: ../new/makeinfantryowner.rst:26
msgid ""
"Note that this is not a warhead property; it goes on the corresponding "
"animation entry in :file:`artmd.ini`. However, :tag:`MakeInfantryOwner` "
"only works for specific animations; namely those invoked by "
":tag:`InfDeathAnim`, :tag:`DeathAnims`, :tag:`InfantryExplode`, "
":tag:`FlamingInfantry`, :tag:`InfantryElectrocuted`, "
":tag:`InfantryHeadPop`, :tag:`InfantryNuked`, :tag:`InfantryVirus`, "
":tag:`InfantryMutate`, :tag:`InfantryBrute`, and map triggers. The "
"default :tag:`MakeInfantryOwner` is :value:`invoker`, which corresponds "
"to a different player depending on the animation."
msgstr ""

#: ../new/makeinfantryowner.rst:36
msgid ""
"For :tag:`InfDeathAnim`, :tag:`InfantryVirus` and :tag:`InfantryMutate`, "
":value:`invoker` represents :value:`killer` (the owner of the killing "
"unit). For :tag:`InfantryVirus` on a :tag:`NotHuman=no` victim, the "
"remappable colors are **not** used. If you want them, use :value:`killer`"
" explicitly."
msgstr ""

#: ../new/makeinfantryowner.rst:40
msgid ""
"For :tag:`InfantryExplode`, :tag:`FlamingInfantry`, "
":tag:`InfantryElectrocuted`, :tag:`InfantryHeadPop`, "
":tag:`InfantryNuked`, and :tag:`InfantryBrute`, :value:`invoker` "
"represents the neutral house with the remappable colors **not** being "
"used. If you want the remapped colors, you have to use :value:`neutral` "
"explicitly."
msgstr ""

#: ../new/makeinfantryowner.rst:45
msgid ""
"For :tag:`DeathAnims`, :value:`invoker` represents :value:`victim` (the "
"owner of the dying unit)."
msgstr ""

#: ../new/makeinfantryowner.rst:47
msgid ""
"For map triggers, :value:`invoker`, :value:`killer` and :value:`victim` "
"all represent the house that is considered to be the owner of the "
"trigger."
msgstr ""

#: ../new/makeinfantryowner.rst:51
msgid ""
":value:`random` will pick a random player from all players in the game, "
"including the houses available as :value:`neutral`, :value:`special` and "
":value:`civilian`."
msgstr ""

#: ../new/makeinfantryowner.rst:55
msgid ""
"Like :tag:`InfDeath=9`, mutation animations will be rendered in the unit "
"palette with remap colors instead of :file:`anim.pal`, if not noted "
"otherwise."
msgstr ""

